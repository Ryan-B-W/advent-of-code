[[https://adventofcode.com/2022/day/1][Day 1 of Advent of Code 2022]]

* Part 1
The input is a double newline separated list of newline separated
lists of numbers.  The desire is to get the maximum of the sum of a
sub-list.

[[file:inputs/day1][Input]] file.

#+BEGIN_SRC lisp
  (defun day1 (input-file)
    (with-open-file (input input-file)
      (let ((input-list
             (split-sequence:split-sequence
              nil
              (loop for line = (read-line input nil nil)
                 while line
                 if (string= line "")
                 collect nil
                 else
                 collect (parse-integer line)))))
        (reduce #'max (map 'list (lambda (l) (reduce #'+ l)) input-list)))))
  (day1 "inputs/day1")
#+END_SRC

* Part 2

The desire is to get the total of the top 3 sums from part 1.  Input is the same.

#+BEGIN_SRC lisp
  (defun day1part2 (input-file)
    (with-open-file (input input-file)
      (let ((input-list
             (split-sequence:split-sequence
              nil
              (loop for line = (read-line input nil nil)
                 while line
                 if (string= line "")
                 collect nil
                 else
                 collect (parse-integer line)))))
        (apply #'+ (subseq (sort (map 'list (lambda (l) (reduce #'+ l)) input-list) #'>) 0 3)))))
  (day1part2 "inputs/day1")
#+END_SRC
